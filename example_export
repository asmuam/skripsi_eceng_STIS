/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var ROI = ee.FeatureCollection("projects/ee-muddasir-shah/assets/islamabad"),
    sentinel2_l2A = ee.ImageCollection("COPERNICUS/S2_SR_HARMONIZED");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Webinar Part 1 - Data Filtering and Exporting for TF


var filtering_images = sentinel2_l2A.filterBounds(ROI)
                      .filterDate('2023-05-01','2023-05-31')
                      .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE',5));
                      print(filtering_images,'Filtered Collection');


// Our Study Area is Covered in 2 Tiles of Same Date
// Lets Mosic them first and then Clip the mosaiced Image
// I am interested in tile 4 and 5 dated 2023-05-20
var images_ids_list = filtering_images.toList(filtering_images.size());
var tile_4 = ee.Image(images_ids_list.get(4));
var tile_5 = ee.Image(images_ids_list.get(5));
// to make a mosaic we need to make an image collection again out of these tiles
var collection = ee.ImageCollection([tile_4,tile_5]);
var mosaic = collection.mosaic();
var clipped = mosaic.clip(ROI);
print(clipped,'Clipped Image');
// Lets Visualize the Image
Map.addLayer(clipped,{min:250, max: 2500, bands:['B4','B3','B2']}, 'Sentinel-2 Image Clipped',false);
Map.addLayer(tile_4,{min:250, max: 2500, bands:['B4','B3','B2']}, 'tile_4',false);
Map.addLayer(tile_5,{min:250, max: 2500, bands:['B4','B3','B2']}, 'tile_5',false);
print(ROI)
// Mengatur pusat peta ke koordinat centroid
Map.centerObject(ROI, 12);  // 12 adalah tingkat zoom

var imgVV = ee.ImageCollection('COPERNICUS/S1_GRD')
        .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
        .filter(ee.Filter.eq('instrumentMode', 'IW'))
        .select('VV')
        .map(function(image) {
          var edge = image.lt(-30.0);
          var maskedImage = image.mask().and(edge.not());
          return image.updateMask(maskedImage);
        });

var desc = imgVV.filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'));
var asc = imgVV.filter(ee.Filter.eq('orbitProperties_pass', 'ASCENDING'));

var spring = ee.Filter.date('2015-03-01', '2015-04-20');
var lateSpring = ee.Filter.date('2015-04-21', '2015-06-10');
var summer = ee.Filter.date('2015-06-11', '2015-08-31');

var descChange = ee.Image.cat(
        desc.filter(spring).mean(),
        desc.filter(lateSpring).mean(),
        desc.filter(summer).mean());

var ascChange = ee.Image.cat(
        asc.filter(spring).mean(),
        asc.filter(lateSpring).mean(),
        asc.filter(summer).mean());

Map.setCenter(5.2013, 47.3277, 12);
Map.addLayer(ascChange, {min: -25, max: 5}, 'Multi-T Mean ASC', true);
Map.addLayer(descChange, {min: -25, max: 5}, 'Multi-T Mean DESC', true);