/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var roi = 
    /* color: #d6c6c6 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[110.4075018622231, -7.316750824882465],
          [110.46209018009229, -7.316750824882469],
          [110.4620901800923, -7.2614117383033845],
          [110.40750186222311, -7.26141173830338],
          [110.4075018622231, -7.316750824882465]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Fungsi untuk masking cloud Sentinel-2 dengan mempertahankan properti awal
function maskS2clouds(image) {
  var qa = image.select('QA60')
  var cloudBitMask = 1 << 10
  var cirrusBitMask = 1 << 11
  var mask = qa
    .bitwiseAnd(cloudBitMask)
    .eq(0)
    .and(qa.bitwiseAnd(cirrusBitMask).eq(0))
  var maskedImage = image.updateMask(mask).divide(10000)
  return maskedImage.copyProperties(image, image.propertyNames())
}

// Inisialisasi Google Earth Engine
var imageCollection = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
  .filterDate('2024-07-01', '2024-07-02') // Filter berdasarkan tanggal
  .filterBounds(roi) // Filter berdasarkan wilayah
  .map(maskS2clouds)
// Ambil citra dengan awan paling sedikit
var image = imageCollection.sort('CLOUDY_PIXEL_PERCENTAGE').first();

// Klip gambar ke ROI
var clippedImage = image.clip(roi);

// Tambahkan layer ke peta
Map.centerObject(roi, 10);
Map.addLayer(clippedImage, {bands: ['B4', 'B3', 'B2'], min: 0, max: 3000}, 'Sentinel-2 Image');
Map.addLayer(roi, {}, 'ROI');
