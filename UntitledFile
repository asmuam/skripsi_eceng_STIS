/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var roi = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[110.4109350897612, -7.263046977101489],
          [110.4109350897612, -7.312596883543346],
          [110.45865695255416, -7.312596883543346],
          [110.45865695255416, -7.263046977101489]]], null, false),
    image = ee.Image("users/222111840/LC_Image_v1"),
    shapefile = ee.FeatureCollection("projects/ee-222111840/assets/rawa_pening");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Fungsi untuk masking cloud Sentinel-2 dengan mempertahankan properti awal
function maskS2clouds(image) {
  var qa = image.select('QA60')
  var cloudBitMask = 1 << 10
  var cirrusBitMask = 1 << 11
  var mask = qa
    .bitwiseAnd(cloudBitMask)
    .eq(0)
    .and(qa.bitwiseAnd(cirrusBitMask).eq(0))
  var maskedImage = image.updateMask(mask).divide(10000)
  return maskedImage.copyProperties(image, image.propertyNames())
}

// Inisialisasi Google Earth Engine
var imageCollectionS2 = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
  .filterDate('2024-07-01', '2024-07-31') // Filter berdasarkan tanggal
  .filterBounds(roi) // Filter berdasarkan wilayah
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 10)) // Filter untuk awan rendah
  .map(maskS2clouds)
  .sort('system:time_start')


var imageCollectionS1 = ee.ImageCollection('COPERNICUS/S1_GRD')
  .filterDate('2024-07-01', '2024-07-31') // Filter berdasarkan tanggal
  .filterBounds(roi) // Filter berdasarkan wilayah
  .sort('system:time_start')

print(imageCollectionS1)
print(imageCollectionS2)

// Mendefinisikan wilayah danau 
var danau = shapefile.geometry();

// Menampilkan citra Sentinel-1 dengan polarisasi VV (single-band)
var S1_25_Juli_2024 = ee.Image(imageCollectionS1.toList(imageCollectionS1.size()).get(4)); // Ambil citra ke-5 (indeks 4)
var S1_VV = S1_25_Juli_2024.select('VV'); // Band 'VV' untuk polarisasi Vertical-Vertical
Map.addLayer(S1_VV.clip(danau), {min: -30, max: 5, palette: ['blue', 'green', 'red']}, 'S1 VV 25 Juli 2024');

// Menampilkan citra Sentinel-2 RGB (Red, Green, Blue)
var S2_21_Juli_2024 = ee.Image(imageCollectionS2.toList(imageCollectionS2.size()).get(3)); // Ambil citra ke-4 (indeks 3)
var S2_rgb = S2_21_Juli_2024.select(['B4', 'B3', 'B2']); // Band 4 = Red, Band 3 = Green, Band 2 = Blue
Map.addLayer(S2_rgb.clip(danau), {min: 0, max: 0.3}, 'S2 RGB 21 Juli 2024'); // Normalisasi nilai citra untuk visualisasi

// Menampilkan citra Sentinel-2 RGB untuk citra lainnya
var S2_26_Juli_2024 = ee.Image(imageCollectionS2.toList(imageCollectionS2.size()).get(5)); // Ambil citra ke-6 (indeks 5)
var S2_rgb_26Juli = S2_26_Juli_2024.select(['B4', 'B3', 'B2']);
Map.addLayer(S2_rgb_26Juli.clip(danau), {min: 0, max: 0.3}, 'S2 RGB 26 Juli 2024');

var danau = roi.difference(shapefile.geometry());

// Tampilkan hasil di peta
Map.addLayer(danau, {color: 'blue'}, 'Danau');
Map.centerObject(danau);

// Menampilkan shapefile di peta
Map.addLayer(shapefile, {}, 'Shapefile');
