/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var sbwp = ee.FeatureCollection("projects/ee-222111840/assets/rawa_pening_sbwp"),
    rf = ee.Image("projects/ee-222111840/assets/rf"),
    cnn1d = ee.Image("projects/ee-222111840/assets/cnn1"),
    roi = ee.FeatureCollection("projects/ee-222111840/assets/roi"),
    image = ee.Image("projects/ee-222111840/assets/rawa_pening_image");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Definisikan Panel dan UI di awal
// Panel untuk Menampilkan Intro
var introPanel = ui.Panel({
    style: {
        width: '30%',
        fontSize: '1vw',
        fontWeight: 'bold',
        border: '5px solid darkgray'
    }
});

// Panel untuk Menampilkan Inspector
var inspector = ui.Panel({
    layout: ui.Panel.Layout.flow('vertical')
});

// Panel untuk Menampilkan Legend
var dataPanel = ui.Panel({
    style: {
        position: 'bottom-right',
        width: '25%'
    }
});

// Panel untuk Menampilkan Data Referensi
var legend = ui.Panel({
    style: {
        position: 'bottom-left',
        width: '25%'
    }
});

// Fungsi untuk membuat panel intro
function panelcreate() {
    var intro = ui.Panel([
        ui.Label({
            value: 'Sebaran Eceng Gondok',
            style: {
                fontSize: '1.4vw',
                fontWeight: 'bold',
                textAlign: 'center',
                stretch: 'horizontal'
            }
        }),
        ui.Label({
            value: 'Danau Rawa Pening 2024',
            style: {
                fontSize: '1.4vw',
                fontWeight: 'bold',
                textAlign: 'center',
                stretch: 'horizontal'
            }
        }),
        ui.Label({
            value: 'Aplikasi ini memvisualisasikan hasil klasifikasi area Danau Rawa Pening. ' +
                'Klasifikasi dilakukan menggunakan metode machine learning Random Forest (RF) dan deep learning CNN1D. ' +
                'Data citra satelit Sentinel-1 dan Sentinel-2 digunakan untuk ekstraksi pita dan indeks spektral. ' +
                'Hasil klasifikasi mencakup enam kelas:',
            style: {
                fontSize: '0.9vw',
                fontWeight: 'normal'
            }
        }),
        // Kelas-kelas yang terklasifikasi
        createClassificationLabel('0. Eceng Gondok'),
        createClassificationLabel('1. Keramba Jaring Apung'),
        createClassificationLabel('2. Air'),
        createClassificationLabel('3. Vegetasi lain'),
        createClassificationLabel('4. Tanah'),
        createClassificationLabel('5. Lain-lain'),
        ui.Label({
            value: 'Klik pada titik untuk melihat klasifikasi, nilai indeks spektral, dan detail lain dari piksel terpilih',
            style: {
                fontSize: '0.9vw',
                fontWeight: 'normal'
            }
        }),
        ui.Label({
            value: 'Peta batas wilayah penelitian bersumber dari Peta Sub-Batas Wilayah ' +
                'Perencanaan Danau Rawa Pening yang diterbitkan oleh Balai Besar Wilayah Sungai ' +
                'Pemali Juana.',
            style: {
                fontSize: '0.9vw',
                fontWeight: 'normal'
            }
        }),
        ui.Label({
            value: 'Lapisan data (layer) dapat diganti melalui panel legenda.',
            style: {
                fontSize: '0.9vw',
                fontWeight: 'normal'
            }
        })
    ]);
    introPanel.add(intro);
}

// Fungsi untuk membuat panel referensi
function referencecreate() {
    var referenceZero = ui.Label({
        value: 'Data Tambahan:',
        style: {
            color: 'black',
            fontWeight: 'bold',
            textAlign: 'left'
        }
    });
    var referenceOne = ui.Label({
        value: 'üìÅ Aset Balai Besar Wilayah Sungai Pemali Juana',
        style: {
            color: 'black',
            fontWeight: 'bold',
            textAlign: 'left'
        },
        targetUrl: 'drive.google.com'
    });
    var referenceTwo = ui.Label({
        value: 'üíª Kode Python untuk Pengolahan',
        style: {
            color: 'black',
            fontWeight: 'bold',
            textAlign: 'left',
            padding: '0px 0px 4px 0px'
        },
        targetUrl: 'https://colab.research.google.com/drive/1DCOyKQ2XWKaLIT7h8__X5uc6QrxCeyCb#scrollTo=OhQrbdyR-Y_k&uniqifier=2'
    });
    var referenceThree = ui.Label({
        value: 'Created by:',
        style: {
            color: 'black',
            fontWeight: 'bold',
            textAlign: 'center'
        }
    });
    var author = ui.Label({
        value: '222111840@stis.ac.id',
        style: {
            color: 'black',
            fontWeight: 'bold',
            textAlign: 'center'
        },
        targetUrl: 'mailto:222111840@stis.ac.id'
    });

    introPanel.add(referenceZero);
    introPanel.add(referenceOne);
    introPanel.add(referenceTwo);
    introPanel.add(referenceThree);
    introPanel.add(author);
}

// Fungsi untuk membuat label klasifikasi
function createClassificationLabel(value) {
    return ui.Label({
        value: value,
        style: {
            fontSize: '0.9vw',
            fontWeight: 'normal',
            margin: '0px 0px 0px 8px'
        }
    });
}

// Data Layer Info
var thePalette = [
    "#32CD32", "#BECD32", "#1E90FF", "#228B22", "#D2B48C", "#808080"
];

var dataInfo = {
    'citra': {
        name: 'Citra RGB satelit Sentinel-2',
        desc: 'Citra dasar RGB satelit Sentinel-2',
        img: image,
        vis: {
            bands: ['B4', 'B3', 'B2'],
            min: 0,
            max: 0.3
        }
    },
    'radar': {
        name: 'Citra radar satelit Sentinel-1',
        desc: 'Citra radar satelit Sentinel-1 dalam bentuk RGB (VV, VH, VV/VH)',
        img: image,
        vis: {
            bands: ['VV', 'VH', 'VV_VH_ratio'],
            min: -40,
            max: 0
        }
    },
    'rf': {
        name: 'Klasifikasi Random Forest',
        desc: 'Hasil klasifikasi lahan menggunakan algoritma Random Forest',
        img: rf,
        vis: {
            min: 0,
            max: 5,
            palette: thePalette
        }
    },
    'cnn1d': {
        name: 'Klasifikasi CNN1D',
        desc: 'Hasil klasifikasi lahan menggunakan algoritma CNN1D',
        img: cnn1d,
        vis: {
            min: 0,
            max: 5,
            palette: thePalette
        }
    }
};

// Membuat Map
var map = ui.Map();
map.centerObject(roi, 14);
ui.root.add(map);
ui.root.insert(1, introPanel);

// Membuat selector layer
var select = ui.Select({
    items: [
        { value: 'none', label: 'Select Layer' },
        { value: 'citra', label: 'Citra RGB satelit Sentinel-2' },
        { value: 'radar', label: 'Citra radar satelit Sentinel-1' },
        { value: 'rf', label: 'Klasifikasi Random Forest' },
        { value: 'cnn1d', label: 'Klasifikasi CNN1D' }
    ],
    value: 'none',
    style: { margin: '8px 0px' }
});

// Fungsi untuk menggambar ulang layer pada map
function redraw(layer, opacity) {
    var info = dataInfo[layer];
    map.layers().reset();
    legend.clear();

    if (layer === 'none') return;

    var visImg = info.img.visualize(info.vis).set('opacity', opacity);
    map.addLayer(visImg, {}, layer);

    legend.add(ui.Label({
        value: info.desc,
        style: { fontSize: '14px', fontWeight: 'bold', textAlign: 'left', margin: '4px 0px' }
    }));

    var classLabels = ['Eceng Gondok', 'Keramba Jaring Apung', 'Air', 'Vegetasi Lain', 'Tanah', 'Lain-lain'];
    var classColors = info.vis.palette;

    classLabels.forEach(function (label, index) {
        legend.add(createLegendItem(classColors[index], label, index));
    });
}

// Fungsi untuk membuat item legend
function createLegendItem(color, label, index) {
    var colorBox = ui.Label({
        style: {
            backgroundColor: color,
            padding: '8px',
            margin: '4px',
            border: '1px solid black',
            width: '20px',
            height: '20px'
        }
    });

    var textLabel = ui.Label({
        value: index + ': ' + label,
        style: {
            margin: '4px 0px',
            fontSize: '12px',
            padding: '0 4px'
        }
    });

    return ui.Panel({
        widgets: [colorBox, textLabel],
        layout: ui.Panel.Layout.flow('horizontal'),
        style: { margin: '4px 0px' }
    });
}

// Menangani perubahan opacity
var opacitySlider = ui.Slider({
    min: 0,
    max: 1,
    value: 0.7,
    step: 0.05,
    style: { width: '200px', margin: '10px' }
});

opacitySlider.onChange(function(value) {
    var selectedLayer = select.getValue();
    redraw(selectedLayer, value);
});

// Menangani perubahan layer pada selector
select.onChange(function(layer) {
    redraw(layer, opacitySlider.getValue());
});

// Inisialisasi dengan layer pertama
redraw('citra', opacitySlider.getValue());

// Menambahkan slider dan selector ke legend
legend.add(ui.Label({
    value: 'Choose display layer:',
    style: { fontSize: '14px', fontWeight: 'bold', textAlign: 'left', margin: '4px 0px' }
}));
legend.add(select);

legend.add(ui.Label({
    value: 'Adjust Opacity:',
    style: { fontSize: '14px', fontWeight: 'bold', textAlign: 'left', margin: '4px 0px' }
}));
legend.add(opacitySlider);

// Menambahkan legend ke map
map.add(legend);

// Menambahkan panel inspector
map.add(inspector);

// Set opsi peta
map.setOptions('SATELLITE');
map.setControlVisibility({
    all: false,
    layerList: false,
    zoomControl: true,
    scaleControl: true,
    mapTypeControl: false,
    fullscreenControl: false
});

// Set cursor map menjadi 'crosshair'
map.style().set('cursor', 'crosshair');
