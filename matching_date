/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var roi = 
    /* color: #ff9797 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[110.40784518497604, -7.261173849220073],
          [110.40784518497604, -7.313959002794661],
          [110.45934359806198, -7.313959002794661],
          [110.45934359806198, -7.261173849220073]]], null, false),
    shapefile = ee.FeatureCollection("projects/ee-222111840/assets/rawa_pening"),
    bbws = ee.Image("projects/ee-222111840/assets/rawa_pening_bbws"),
    dji0095 = 
    /* color: #ff00ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.447865194444, -7.26668133333333]),
        {
          "system:index": "0"
        }),
    dji0121 = 
    /* color: #ff9999 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.42236875, -7.30435008333333]),
        {
          "system:index": "0"
        }),
    dji0122 = 
    /* color: #99ff99 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.42288325, -7.30369816666667]),
        {
          "system:index": "0"
        }),
    dji0120 = 
    /* color: #9999ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.422376305556, -7.30434944444444]),
        {
          "system:index": "0"
        }),
    dji0119 = 
    /* color: #ffff99 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.423018694444, -7.30536213888889]),
        {
          "system:index": "0"
        }),
    dji0117 = 
    /* color: #99ffff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.4230205, -7.30536827777778]),
        {
          "system:index": "0"
        }),
    dji0114 = 
    /* color: #ff99ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.447676388889, -7.27494127777778]),
        {
          "system:index": "0"
        }),
    dji0113 = 
    /* color: #d63000 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.44744425, -7.2780285]),
        {
          "system:index": "0"
        }),
    dji0112 = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.447443305556, -7.27802783333333]),
        {
          "system:index": "0"
        }),
    dji0110 = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.444154055556, -7.27244091666667]),
        {
          "system:index": "0"
        }),
    dji0109 = 
    /* color: #ffc82d */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.444274138889, -7.27224408333333]),
        {
          "system:index": "0"
        }),
    dji0108 = 
    /* color: #00ffff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.444194694444, -7.27237541666667]),
        {
          "system:index": "0"
        }),
    dji0107 = 
    /* color: #bf04c2 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.4443155, -7.27217716666667]),
        {
          "system:index": "0"
        }),
    dji0104 = 
    /* color: #ff0000 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445214694444, -7.27086080555556]),
        {
          "system:index": "0"
        }),
    dji0103 = 
    /* color: #00ff00 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445219527778, -7.27086544444444]),
        {
          "system:index": "0"
        }),
    dji0102 = 
    /* color: #0000ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445221722222, -7.27086591666667]),
        {
          "system:index": "0"
        }),
    dji0101 = 
    /* color: #999900 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.4452205, -7.27086597222222]),
        {
          "system:index": "0"
        }),
    dji0100 = 
    /* color: #009999 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445177305556, -7.27091152777778]),
        {
          "system:index": "0"
        }),
    dji0099 = 
    /* color: #ff00ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445177916667, -7.27091080555556]),
        {
          "system:index": "0"
        }),
    dji0098 = 
    /* color: #ff9999 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445179055556, -7.27091097222222]),
        {
          "system:index": "0"
        }),
    dji0097 = 
    /* color: #99ff99 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445178666667, -7.27091072222222]),
        {
          "system:index": "0"
        }),
    dji0096 = 
    /* color: #9999ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445178916667, -7.27091152777778]),
        {
          "system:index": "0"
        }),
    dji0118 = 
    /* color: #ffff99 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.42302, -7.30537],
             [110.42302, -7.30536]]),
        {
          "system:index": "0"
        }),
    dji0116 = 
    /* color: #99ffff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.44773, -7.26692],
             [110.44733, -7.26775]]),
        {
          "system:index": "0"
        }),
    dji0115 = 
    /* color: #ff99ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.44744, -7.2718],
             [110.44723, -7.26878]]),
        {
          "system:index": "0"
        }),
    dji0111 = 
    /* color: #d63000 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.44416, -7.27244],
             [110.44416, -7.27244]]),
        {
          "system:index": "0"
        }),
    dji0106 = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.44461, -7.27209],
             [110.44461, -7.27209]]),
        {
          "system:index": "0"
        }),
    dji0105 = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.44778, -7.26694],
             [110.44579, -7.27079]]),
        {
          "system:index": "0"
        }),
    table = ee.FeatureCollection("projects/ee-222111840/assets/droneDJI");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Fungsi untuk mendapatkan citra dengan tanggal paling dekat atau sesuai targetDate
function getClosestImage(collection, targetDate) {
  return collection
    .map(function (image) {
      var imageDate = ee.Date(image.get('system:time_start')) // Gunakan system:time_start
      var diff = ee.Number(imageDate.difference(targetDate, 'day')).abs() // Selisih waktu
      return image.set('date_diff', diff)
    })
    .sort('date_diff')
    .first() // Citra dengan selisih waktu terkecil
}
// Fungsi untuk masking cloud Sentinel-2 dengan mempertahankan properti awal
function maskS2clouds(image) {
  var qa = image.select('QA60')
  var cloudBitMask = 1 << 10
  var cirrusBitMask = 1 << 11
  var mask = qa
    .bitwiseAnd(cloudBitMask)
    .eq(0)
    .and(qa.bitwiseAnd(cirrusBitMask).eq(0))
  var maskedImage = image.updateMask(mask).divide(10000)
  return maskedImage.copyProperties(image, image.propertyNames())
}
// Fungsi untuk mencocokkan citra berdasarkan tanggal
function findMatchingDates(s1Collection, s2Collection) {
  // Ambil daftar tanggal dari Sentinel-1 dan Sentinel-2
  var s1Dates = s1Collection.aggregate_array('system:time_start');
  var s2Dates = s2Collection.aggregate_array('system:time_start');
  // Ubah ke format tanggal untuk pencocokan
  s1Dates = s1Dates.map(function(date) { return ee.Date(date).format('YYYY-MM-dd'); });
  s2Dates = s2Dates.map(function(date) { return ee.Date(date).format('YYYY-MM-dd'); });
  // Temukan irisan antara dua koleksi berdasarkan tanggal
  var commonDates = s1Dates.filter(ee.Filter.inList('item', s2Dates));
    // Urutkan tanggal berdasarkan yang terbaru
  commonDates = commonDates.sort();
  return commonDates;
}
// Function to calculate the number of lake pixels
function calculateLakePixels(image, lakeGeometry) {
  var lakePixels = image.reduceRegion({
    reducer: ee.Reducer.count(),
    geometry: lakeGeometry,
    scale: 10,
    maxPixels: 1e9
  });
  return lakePixels;
}
// daerah danau
var danau = roi.difference(shapefile.geometry(), ee.ErrorMargin(1));
// Tentukan tanggal tetap untuk citra ()
var targetDate = ee.Date('2024-7-15')
var range = 200
// Koleksi Sentinel-2 pada tanggal 20 Juni 2024
var sentinel2 = ee
  .ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
  .filterBounds(roi)
  .filterDate(targetDate.advance(-range, 'day'), targetDate.advance(range, 'day')) // Citra untuk satu hari
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 10)) // Filter untuk awan rendah
  .map(maskS2clouds)
  .sort('system:time_start') // Urutkan berdasarkan waktu citra
// Koleksi Sentinel-1 pada tanggal 20 Juni 2024
var sentinel1 = ee
  .ImageCollection('COPERNICUS/S1_GRD')
  .filterBounds(roi)
  .filterDate(targetDate.advance(-range, 'day'), targetDate.advance(range, 'day')) // Citra untuk satu hari
// Contoh penggunaan fungsi dengan koleksi S1 dan S2
var matchingDates = findMatchingDates(sentinel1, sentinel2);
// Example usage with a Sentinel-2 image
var lakePixels = calculateLakePixels(sentinel2.first(), danau);
print('Number of lake pixels:', lakePixels);
print(matchingDates)

var sentinel2_20241029 = ee
  .ImageCollection('COPERNICUS/S2_SR_HARMONIZED') 
  .filterDate("2024-10-29", "2024-10-30") 
  .filterBounds(roi) 
  .map(maskS2clouds)
// Add the images to the map
Map.addLayer(sentinel2_20241029, {bands: ['B4', 'B3', 'B2'], max: 0.3}, 'Sentinel-2 2024-02-12');
var dji0095 = dji0095.set('id', 'dji0095'); var dji0121 = dji0121.set('id', 'dji0121'); var dji0122 = dji0122.set('id', 'dji0122'); var dji0120 = dji0120.set('id', 'dji0120'); var dji0119 = dji0119.set('id', 'dji0119'); var dji0117 = dji0117.set('id', 'dji0117'); var dji0114 = dji0114.set('id', 'dji0114'); var dji0113 = dji0113.set('id', 'dji0113'); var dji0112 = dji0112.set('id', 'dji0112'); var dji0110 = dji0110.set('id', 'dji0110'); var dji0109 = dji0109.set('id', 'dji0109'); var dji0108 = dji0108.set('id', 'dji0108'); var dji0107 = dji0107.set('id', 'dji0107'); var dji0104 = dji0104.set('id', 'dji0104'); var dji0103 = dji0103.set('id', 'dji0103'); var dji0102 = dji0102.set('id', 'dji0102'); var dji0101 = dji0101.set('id', 'dji0101'); var dji0100 = dji0100.set('id', 'dji0100'); var dji0099 = dji0099.set('id', 'dji0099'); var dji0098 = dji0098.set('id', 'dji0098'); var dji0097 = dji0097.set('id', 'dji0097'); var dji0096 = dji0096.set('id', 'dji0096'); var dji0118 = dji0118.set('id', 'dji0118'); var dji0116 = dji0116.set('id', 'dji0116'); var dji0115 = dji0115.set('id', 'dji0115'); var dji0111 = dji0111.set('id', 'dji0111'); var dji0106 = dji0106.set('id', 'dji0106'); var dji0105 = dji0105.set('id', 'dji0105')
var droneDJI = ee.FeatureCollection([
  dji0095, dji0121, dji0122, dji0120, dji0119, dji0117, dji0114, dji0113, dji0112, dji0110,
  dji0109, dji0108, dji0107, dji0104, dji0103, dji0102, dji0101, dji0100, dji0099, dji0098,
  dji0097, dji0096, dji0118, dji0116, dji0115, dji0111, dji0106, dji0105
]);

Export.table.toAsset({
  collection: droneDJI,
  description: 'koordinat_drone',
  assetId: 'projects/ee-222111840/assets/droneDJI'
});

Map.addLayer(droneDJI, {color: 'red'}, 'drone DJI');