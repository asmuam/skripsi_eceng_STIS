/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var dji0095 = 
    /* color: #ff00ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.447865194444, -7.26668133333333]),
        {
          "system:index": "0"
        }),
    dji0121 = 
    /* color: #ff9999 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.42236875, -7.30435008333333]),
        {
          "system:index": "0"
        }),
    dji0122 = 
    /* color: #99ff99 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.42288325, -7.30369816666667]),
        {
          "system:index": "0"
        }),
    dji0120 = 
    /* color: #9999ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.422376305556, -7.30434944444444]),
        {
          "system:index": "0"
        }),
    dji0119 = 
    /* color: #ffff99 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.423018694444, -7.30536213888889]),
        {
          "system:index": "0"
        }),
    dji0117 = 
    /* color: #99ffff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.4230205, -7.30536827777778]),
        {
          "system:index": "0"
        }),
    dji0114 = 
    /* color: #ff99ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.447676388889, -7.27494127777778]),
        {
          "system:index": "0"
        }),
    dji0113 = 
    /* color: #d63000 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.44744425, -7.2780285]),
        {
          "system:index": "0"
        }),
    dji0112 = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.447443305556, -7.27802783333333]),
        {
          "system:index": "0"
        }),
    dji0110 = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.444154055556, -7.27244091666667]),
        {
          "system:index": "0"
        }),
    dji0109 = 
    /* color: #ffc82d */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.444274138889, -7.27224408333333]),
        {
          "system:index": "0"
        }),
    dji0108 = 
    /* color: #00ffff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.444194694444, -7.27237541666667]),
        {
          "system:index": "0"
        }),
    dji0107 = 
    /* color: #bf04c2 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.4443155, -7.27217716666667]),
        {
          "system:index": "0"
        }),
    dji0104 = 
    /* color: #ff0000 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445214694444, -7.27086080555556]),
        {
          "system:index": "0"
        }),
    dji0103 = 
    /* color: #00ff00 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445219527778, -7.27086544444444]),
        {
          "system:index": "0"
        }),
    dji0102 = 
    /* color: #0000ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445221722222, -7.27086591666667]),
        {
          "system:index": "0"
        }),
    dji0101 = 
    /* color: #999900 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.4452205, -7.27086597222222]),
        {
          "system:index": "0"
        }),
    dji0100 = 
    /* color: #009999 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445177305556, -7.27091152777778]),
        {
          "system:index": "0"
        }),
    dji0099 = 
    /* color: #ff00ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445177916667, -7.27091080555556]),
        {
          "system:index": "0"
        }),
    dji0098 = 
    /* color: #ff9999 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445179055556, -7.27091097222222]),
        {
          "system:index": "0"
        }),
    dji0097 = 
    /* color: #99ff99 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445178666667, -7.27091072222222]),
        {
          "system:index": "0"
        }),
    dji0096 = 
    /* color: #9999ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.Point([110.445178916667, -7.27091152777778]),
        {
          "system:index": "0"
        }),
    dji0118 = 
    /* color: #ffff99 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.42302, -7.30537],
             [110.42302, -7.30536]]),
        {
          "system:index": "0"
        }),
    dji0116 = 
    /* color: #99ffff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.44773, -7.26692],
             [110.44733, -7.26775]]),
        {
          "system:index": "0"
        }),
    dji0115 = 
    /* color: #ff99ff */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.44744, -7.2718],
             [110.44723, -7.26878]]),
        {
          "system:index": "0"
        }),
    dji0111 = 
    /* color: #d63000 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.44416, -7.27244],
             [110.44416, -7.27244]]),
        {
          "system:index": "0"
        }),
    dji0106 = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.44461, -7.27209],
             [110.44461, -7.27209]]),
        {
          "system:index": "0"
        }),
    dji0105 = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Feature(
        ee.Geometry.LineString(
            [[110.44778, -7.26694],
             [110.44579, -7.27079]]),
        {
          "system:index": "0"
        }),
    roi = ee.FeatureCollection("projects/ee-222111840/assets/roi");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// function maskS2clouds(image) {
//   var qa = image.select("QA60");
//   var cloudBitMask = 1 << 10;
//   var cirrusBitMask = 1 << 11;
//   var mask = qa
//     .bitwiseAnd(cloudBitMask)
//     .eq(0)
//     .and(qa.bitwiseAnd(cirrusBitMask).eq(0));
//   var maskedImage = image.updateMask(mask).divide(10000);
//   return maskedImage.copyProperties(image, image.propertyNames());
// }

function clear_percentage(image, roi) {
  // Fungsi untuk menghitung persentase area tidak berawan dalam ROI
  var cloudMask;
  var scale;
  
  // Cek ketersediaan band dan tentukan metode masking awan
  if (image.bandNames().contains('SCL')) {
    // Menggunakan Scene Classification Layer (SCL) 20m
    var scl = image.select('SCL');
    var cloudValues = [3, 8, 9, 10]; // Kelas awan dan bayangan awan
    cloudMask = scl.eq(3).or(scl.eq(8)).or(scl.eq(9)).or(scl.eq(10)).not();
    scale = 20;
  } else if (image.bandNames().contains('QA60')) {
    // Menggunakan Quality Assessment Band (QA60) 60m
    var qa60 = image.select('QA60');
    var cloudBitMask = 1 << 10; // Bit 10: Opaque clouds
    var cirrusBitMask = 1 << 11; // Bit 11: Cirrus clouds
    cloudMask = qa60.bitwiseAnd(cloudBitMask.or(cirrusBitMask)).not();
    scale = 60;
  } else {
    throw new Error('Tidak ada band SCL atau QA60 yang tersedia');
  }

  // Hitung jumlah piksel bersih dan total piksel
  var stats = cloudMask.rename('cloud_mask')
    .addBands(ee.Image.constant(1).rename('count'))
    .reduceRegion({
      reducer: ee.Reducer.sum().combine({
        reducer2: ee.Reducer.count(),
        sharedInputs: true
      }),
      geometry: roi,
      scale: scale,
      maxPixels: 1e13
    });

  // Ekstrak hasil perhitungan
  var clearPixels = ee.Number(stats.get('cloud_mask')).default(0);
  var totalPixels = ee.Number(stats.get('count')).default(0);
  
  // Hitung persentase bersih
  var clearRatio = clearPixels.divide(totalPixels)
    .multiply(100)
    .default(0); // Hindari NaN jika tidak ada piksel

  // Terapkan mask awan ke citra
  var maskedImage = image.updateMask(cloudMask);

  // Kembalikan citra dengan properti persentase bersih
  return maskedImage.set("clear_percentage", clearRatio)
                   .copyProperties(image, image.propertyNames());
}

var sentinel2 = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')             // Sentinel-2
  .filterBounds(roi)
  .filterDate('2024-1-01', '2024-12-31')
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 5))
  .filter(ee.Filter.eq('SENSING_ORBIT_DIRECTION', 'DESCENDING'))
  // .map(maskS2clouds)
  .map(function(image) {
    return clear_percentage(image, roi); // Teruskan roi ke fungsi
  })
  // .filter(ee.Filter.gt('clear_percentage', 80))
  // .sort('system:time_start');
  .sort('CLOUDY_PIXEL_PERCENTAGE');
  
var sentinel1 = ee.ImageCollection('COPERNICUS/S1_GRD')                       // Sentinel-1
  .filterBounds(roi)
  .filterDate('2024-1-01', '2024-12-31')
  .filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'));
  
var sentinel2List = sentinel2.toList(sentinel2.size());                       // Image selection
var sentinel1List = sentinel1.toList(sentinel1.size());                       // Image selection

print("sentinel 1 :")
print(sentinel1List)
print("sentinel 2 :")
print(sentinel2List)

var sentinel2Imagedesc = ee.Image(sentinel2List.get(18)); // Get first Sentinel-2 image

var rgbVis = {
  bands: ['B4', 'B3', 'B2'], // RGB (Red, Green, Blue)
  min: 0,
  max: 0.3,
};

Map.addLayer(image, rgbVis, 'Sentinel-2 RGB');

var count = sentinel2List.size().getInfo(); // Ambil jumlah elemen
for (var i = 0; i < count; i++) {
  var image = ee.Image(sentinel2List.get(i));
  var index = image.get('system:index'); // Dapatkan indeks citra
  
  // Ambil tanggal akuisisi
  var date = ee.Date(image.get('system:time_start')).format('YYYY-MM-dd').getInfo();
  
  // Tambahkan layer dengan nama yang mencantumkan tanggal
  Map.addLayer(image, rgbVis, 'Sentinel-2 RGB ' + index + ' (' + date + ')');
}

Map.addLayer(roi, {color: 'red'}, 'ROI');
